name: CI/CD Android Pipeline
on:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: 34
          build-tools: 34.0.0
          target: android-34
          emulator: false

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute
        run: chmod +x gradlew

      - name: Unit tests
        run: ./gradlew testDebugUnitTest --no-daemon

      - name: Jacoco report
        run: ./gradlew jacocoTestReport --no-daemon

      - name: Lint
        run: ./gradlew lintDebug --no-daemon --continue

      - name: Build APK
        run: ./gradlew assembleDebug --no-daemon

      - name: Build AAB
        run: ./gradlew bundleRelease --no-daemon

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-aab
          path: app/build/outputs/bundle/release/app-release.aab

      - name: Upload Jacoco
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: app/build/reports/jacoco/testDebugUnitTest/html/

      - name: Upload Lint
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results-debug.html

      - name: Run Snyk Security Scan
        run: snyk test --file=app/build.gradle
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Save Snyk Report
        run: snyk test --file=app/build.gradle --json > snyk-report.json
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-report
          path: snyk-report.json

      - name: Deploy with Firebase CLI
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > key.json
          export GOOGLE_APPLICATION_CREDENTIALS=key.json
          npm install -g firebase-tools
          firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
            --app ${{ secrets.FIREBASE_APP_ID }} \
            --groups testers
